---
title: "Google Gemeni API Key 얻기"
subtitle: "Google Gemeni API Key 얻기"
description:
    "Google Gemeni API Key 얻기"
categories:
  - AI
# All, Data Visualization, Database, DevOps, Pandas, Quarto, Web, HuggingFace
author: gabriel yang
date: "12/22/2023"
image: "https://picsum.photos/id/122/200/150"
# image-alt: "deep learning glossary"
page-layout: article
execute:
  echo: false
---

# Google Gemeni API Key 얻기

Google Gemini에 대해서 알아보고 API키를 사용하는 방법을 정리합니다.

## Google Gemini는 무엇인가요?

Google Gemini는 Google DeepMind가 개발한 고도로 진보된 다중모달 AI 모델입니다. 텍스트, 코드, 오디오, 이미지 및 비디오와 같은 다양한 유형의 정보를 처리하고 이해할 수 있는 능력을 갖추고 있어, 기존의 많은 AI 모델보다 독특하고 다재다능합니다.

이 모델은 Ultra, Pro, Nano라는 세 가지 버전으로 제공되며, 각각 다른 복잡성과 장치 호환성에 맞게 맞춤화되어 있습니다. Gemini Ultra는 가장 복잡한 작업을 위해 설계된 가장 큰 모델입니다. Gemini Pro는 다양한 응용 프로그램에서 확장 가능한 범위의 작업에 최적화되어 있습니다. Gemini Nano는 스마트폰과 같은 장치에서의 작업을 위해 고안된 가장 효율적인 모델입니다​. Gemini의 주요 강점 중 하나는 다양한 AI 벤치마크에서의 성능입니다. 특히 MMLU 벤치마크와 같은 테스트에서 인간 전문가를 능가하는 결과를 보여주었습니다.

## Gemini API키 만들기

Gemeni API를 사용할 수 있도록 [Google Gemini API](https://ai.google.dev/) 페이지로 이동합니다. ![](images/paste-1.png)

홈페이지에 들어가서 약관에 동의하면 Gemini를 사용할 수 있는 `Use Google AI Studio`, `Develop in your own environment` 두 가지 방법을 가이드 합니다. API를 생성하기 위해서 `Develop in your own environment`와 `Create API key in new project`를 선택합니다. 생성된 API키가 노출되지 않도록 잘 저장합니다.

## Gemini API키 python에서 사용하기

API를 파이썬에서 사용하기 위해서 라이브러리를 설치합니다.

```{bash}
pip install google-generativeai
```

API키를 코드에 바로 사용하는 경우 API키가 노출될 수 있습니다. 환경변수에 KEY를 저장하고 환경변수를 이용해서 API키를 사용합니다. 환경변수(Environment Variable)는 운영 체제에서 사용되는 변수로, 프로그램이나 쉘(shell)이 실행되는 환경에 관한 정보를 포함합니다.

| 운영 체제 | 명령어                       | 설명                                                                                          |
|--------------|--------------|--------------------------------------------|
| Windows   | `set API_KEY=12345678910`    | Windows에서는 `set` 명령어를 사용하여 `API_KEY`라는 환경변수에 '12345678910' 값을 설정합니다. |
| Ubuntu    | `export API_KEY=12345678910` | Ubuntu에서는 `export` 명령어로 같은 환경변수를 설정합니다. 이 명령어는 터미널에서 사용됩니다. |

아래는 API 키가 `12345678910`인 경우 환경변수를 설정하는 코드입니다.

``` bash
export API_KEY=12345678910
```

이제 API키를 이용하여 간단한 테스트를 진행합니다. API통해 사용할 수 있는 모델 정보를 확인합니다.

``` python
import pathlib
import textwrap
import os
import google.generativeai as genai

GOOGLE_API_KEY=os.getenv('GOOGLE_API_KEY')
genai.configure(api_key=GOOGLE_API_KEY)
for model in genai.list_models():
  if 'generateContent' in model.supported_generation_methods:
    print(model.name)
```
``` bash
models/gemini-pro
models/gemini-pro-vision
```

위와 같이 `gemini-pro`와 `gemini-pro-vision`을 사용할 수 있습니다. Text 입력을 사용하는 `gemini-pro`를 사용합니다.

``` python
model = genai.GenerativeModel('gemini-pro')
response = model.generate_content("google의 AI gemini 에 대해서 알려줘")
```

출력은 `Markdown`으로 표현됩니다. markdown 형식을 표현하기 위해서 `to_markdown()`함수를 사용합니다.

``` python
from IPython.display import Markdown
def to_markdown(text):
  text = text.replace('•', '  *')
  return Markdown( textwrap.indent(text, '> ', predicate=lambda _: True) )

to_markdown(response.text)
```

> 구글의 AI 제미니(Gemini)는 제품의 전반적인 품질과 사용자 경험을 개선하기 위해 머신 러닝을 사용하는 AI 
> 도구입니다. 제미니는 제품 테스터와 엔지니어가 거의 노력 없이 수백만 개의 자동화된 테스트를 실행하고, 
> 문제를 식별하고, 이러한 문제를 해결할 수 있도록 돕습니다.
> 제미니는 다음과 같은 주요 기능을 제공합니다.
> 
> * **자동화된 테스트:** 제미니는 웹사이트, 모바일 앱, 하드웨어 제품을 포함한 다양한 유형의 제품에 대해 
> 자동화된 테스트를 수행할 수 있습니다. 제미니는 사용자 입력, 인터페이스 요소, 성능 등 다양한 요소를 
> 테스트할 수 있습니다.
> * **문제 식별:** 제미니는 테스트 결과를 분석하고 문제를 식별합니다. 이러한 문제에는 버그, 성능 문제, 
> 사용성 문제가 포함될 수 있습니다.
> * **문제 해결:** 제미니는 문제를 식별한 후 해결할 수 있는 권장 사항을 제공합니다. 이러한 권장 사항은 
> 코드 변경, 구성 변경 또는 사용자 인터페이스 변경일 수 있습니다.
> 
> 제미니는 다양한 업계에서 광범위한 제품을 테스트하는 데 사용되고 있습니다. 예를 들어, 제미니는 구글의 
> 자체 제품인 안드로이드, 크롬, 구글 픽셀을 테스트하는 데 사용됩니다. 제미니는 또한 삼성, LG, 페이스북, 
> 마이크로소프트 등의 기업에서 사용됩니다.
> 
> 제미니는 제품의 전반적인 품질과 사용자 경험을 개선하는 데 도움이 되는 강력한 도구입니다. 제미니는 
> 자동화된 테스트, 문제 식별 및 문제 해결을 통해 제품 테스터와 엔지니어가 제품의 품질을 보다 빠르고 
> 효율적으로 개선할 수 있도록 도와줍니다.


# References
1.  https://ai.google.dev/tutorials/python_quickstart