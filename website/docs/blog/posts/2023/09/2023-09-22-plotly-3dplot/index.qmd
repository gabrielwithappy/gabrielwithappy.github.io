---
title: Plotly 3D Plot만들기
subtitle: Plotly 3D Plot만들기
description:
  Plotly 3D Plot의 사용방법을 정리합니다.
categories:
  - Data Visualization
author: gabriel yang
date: "09/22/2023"
image: "https://picsum.photos/id/221/200/150"
# image-alt: "deep learning glossary"
page-layout: article
# draft: true
---

# Plotly 3D Plot만들기

Plotly 3D Plot을 생성하기 위해서 x와 y축을 `linespace`로 생성합니다. x와 y에는 각각 0 부터 80과 0 부터 60까지를 80개로 나누어진 값이 저장됩니다.
x와 y에 저장된 값으로 x,y평면을 생성하기 위해서 `meshgrid`를 사용합니다. xGrid와 yGrid에는  xy평면의 좌표에 해당하는 값이 `ndarray`형식으로 저장됩니다.

``` {python}
import plotly.graph_objects as go
import numpy as np

N=80

x = np.linspace(0, 80, N)
y = np.linspace(0, 60, N)
xGrid, yGrid = np.meshgrid(x, y)
print(f"xGrid Type: {type(xGrid)}")
print(f"xGrid.shape: {xGrid.shape},  yGrid.shape: {yGrid.shape}")
```

xy평면에 설정할 z값을 sin함수 값으로 설정하고 크기는 20으로 설정합니다. `go.Surface`를 이용해서 3D Plot을 생성하고 `update_layout`으로 title과 크기를 결정합니다.

``` {python}
import plotly.graph_objects as go
import numpy as np

N=80

x = np.linspace(0, 80, N)
y = np.linspace(0, 60, N)
xGrid, yGrid = np.meshgrid(x, y)
z = 20*np.sin(xGrid/40*2*np.pi)

fig = go.Figure(data=[go.Surface(x=x, y=y, z=z, colorscale='YlGnBu', showscale=False)])
fig.update_layout(
    title_text='3D Plot',
    height=800,
    width=780
)
fig.show()
```

## 3D Plot을 subplot에 표시하기

3D Plot을 subplot에 사용하기 위해서 `make_subplots`을 사용합니다. `specs`는 subplot의 옵션을 설정을 위해 사용됩니다. 설정은 생성한 subplot의 갯수와 동일하게 적용하며 `type`변수로
subplot의 형태를 결정합니다. `type`에 사용가능한 설정의 종류는 아래와 같습니다.

- "xy":  막대형 등에 대한 2D 데카르트 하위 플롯 유형입니다. 유형이 지정되지 않은 경우 이것이 기본값입니다.
- "scene": 3d, cone 등에 대한 3D 데카르트 서브플롯
- "polar": 분산형, 막대형 등에 대한 극형 서브플롯
- "ternary": Ternary subplot
- "mapbox": Mapbox subplot


``` {python}
import plotly.graph_objects as go
from plotly.subplots import make_subplots

import numpy as np

# Initialize figure with 4 3D subplots
fig = make_subplots(
    rows=2, cols=2,
    specs=[[{'type': 'scene'}, {'type': 'scene'}],
           [{'type': 'scene'}, {'type': 'scene'}]])

N=80
x = np.linspace(0, 80, N)
y = np.linspace(0, 60, N)
xGrid, yGrid = np.meshgrid(y, x)
z = 20*np.sin(xGrid/40*2*np.pi) + np.sin(xGrid/40*2*np.pi)

# adding surfaces to subplots.
fig.add_trace(
    go.Surface(x=x, y=y, z=z, colorscale='Viridis', showscale=False),
    row=1, col=1)

fig.add_trace(
    go.Surface(x=x, y=y, z=z, colorscale='RdBu', showscale=False),
    row=1, col=2)

fig.add_trace(
    go.Surface(x=x, y=y, z=z, colorscale='YlOrRd', showscale=False),
    row=2, col=1)

fig.add_trace(
    go.Surface(x=x, y=y, z=z, colorscale='YlGnBu', showscale=False),
    row=2, col=2)

fig.update_layout(
    title_text='3D subplots with different colorscales',
    height=800,
    width=780
)

fig.show()
```

subplot에 추가할 그래프가 모두 3D Plot이기 때문에 `make_subplots`의 `spec`의 `type`은 모두 `scene`으로 설정했습니다.
subplot에 3D Plot을 추가하기 위해서 `fig.add_trace()`함수를 사용하고 색상을 다르게 설정하기 위해서 `colorscale`을 다르게 설정했습니다.
